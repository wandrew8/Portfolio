{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./src/components/layout2.js"],"names":["Tags","location","title","query","TAG_QUERY","render","allMarkdownRemark","TagContainer","group","map","edge","key","tag","to","kebabCase","className","totalCount","styled","div","variables","primaryLight","MainWrapper","main","large","StyledFooter","footer","primaryLightGray","Gradient","primaryBlue","primaryGreen","Layout","children","from","height","pathname","styles","style","overflow","Date","getFullYear","defaultProps"],"mappings":"y0BA+CeA,UAvCF,SAAC,GAAD,EAAEC,SAAF,OACX,oCACE,kBAAC,IAAD,CAAKC,MAAM,SACP,kBAAC,IAAD,KACA,6BACI,oCACA,kBAAC,cAAD,CACIC,MAAOC,EACPC,OAAQ,YAA4B,IAAzBC,EAAwB,EAAxBA,kBACP,OACA,kBAACC,EAAD,KACKD,EAAkBE,MAAMC,KAAI,SAAAC,GACzB,OACI,kBAAC,OAAD,CACEC,IAAKD,EAAKE,IACVC,GAAE,SAAWC,IAAUJ,EAAKE,KAA1B,KACF,yBAAKG,UAAU,OACb,4BAAKL,EAAKE,KACV,+BAAKF,EAAKM,WAAV,IAAuBN,EAAKM,WAAa,EAAI,QAAU,OAAvD,YAZxB,SAuBA,6BACI,kBAAC,OAAD,CAAMH,GAAG,SAAT,YACA,kBAAC,OAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,OAAD,CAAMA,GAAG,UAAT,mBAShB,IAAMT,EAAS,aAYTG,EAAeU,IAAOC,IAAV,qEAAGD,CAAH,8dAGLE,IAAUC,e,iICvDjBC,G,UAAcJ,IAAOK,KAAV,2EAAGL,CAAH,6KAOsBE,IAAUI,QAM3CC,EAAeP,IAAOQ,OAAV,4EAAGR,CAAH,gCACPE,IAAUO,kBAIfC,EAAWV,IAAOC,IAAV,wEAAGD,CAAH,sEAGyBE,IAAUS,YAAgBT,IAAUU,cAGrEC,EAAS,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAU9B,EAAe,EAAfA,SAC1B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACI,kBAAC,SAAD,CACE+B,KAAM,CAAEC,OAA8B,MAAtBhC,EAASiC,SAAmB,GAAK,KACjDrB,GAAI,CAAEoB,OAA8B,MAAtBhC,EAASiC,SAAmB,IAAM,MAC/C,SAAAC,GAAM,OACL,yBAAKC,MAAK,eAAGC,SAAU,UAAaF,IAClC,kBAACR,EAAD,UAIR,kBAACN,EAAD,KACKU,GAEL,kBAACP,EAAD,WACK,IAAIc,MAAOC,cADhB,mBAWRT,EAAOU,aAAe,CACpBvC,SAAU,IAGG6B","file":"component---src-pages-tags-js-c1ab3e4b1ea17a71b61b.js","sourcesContent":["import React from \"react\"\r\nimport Layout2 from \"../components/layout2\"\r\nimport kebabCase from \"lodash/kebabCase\"\r\nimport styled from 'styled-components'\r\nimport { variables } from '../styles/variables'\r\nimport { Link, StaticQuery, graphql } from 'gatsby'\r\nimport SEO from \"../components/seo\"\r\n\r\nconst Tags = ({location}) => (\r\n  <>\r\n    <SEO title=\"Tags\" />\r\n        <Layout2>\r\n        <div>\r\n            <h1>Tags</h1>\r\n            <StaticQuery \r\n                query={TAG_QUERY}\r\n                render={({ allMarkdownRemark }) => {\r\n                    return (\r\n                    <TagContainer>\r\n                        {allMarkdownRemark.group.map(edge => {\r\n                            return (\r\n                                <Link \r\n                                  key={edge.tag} \r\n                                  to={`/tags/${kebabCase(edge.tag)}/`}>\r\n                                  <div className=\"tag\">\r\n                                    <h3>{edge.tag}</h3>\r\n                                    <p>({edge.totalCount} {edge.totalCount > 1 ? \"items\" : \"item\"})</p>\r\n                                  </div>\r\n                                </Link>\r\n                                \r\n                            )\r\n                        })}\r\n                    </TagContainer>\r\n                    )\r\n                }}\r\n\r\n            />\r\n            <div>\r\n                <Link to=\"/tags\">All Tags</Link>\r\n                <Link to=\"/projects\">Projects</Link>\r\n                <Link to=\"/posts\">Blog Posts</Link>\r\n            </div>\r\n        </div>\r\n      </Layout2>\r\n  </>\r\n)\r\n\r\nexport default Tags\r\n\r\nconst TAG_QUERY = graphql`\r\nquery AllTags {\r\n    allMarkdownRemark {\r\n      group(field: frontmatter___tags) {\r\n        tag: fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n\r\n`\r\n\r\nconst TagContainer = styled.div`\r\n  a {\r\n    text-decoration: none;\r\n    color: ${variables.primaryLight};\r\n\r\n  }\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, 300px);\r\n  grid-gap: 1rem;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .tag {\r\n    width: 300px;\r\n    height: 100px;\r\n    border-radius: 10px;\r\n    padding: 1rem;\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 0px 3px 10px rgba(25, 17, 34, 0.15);\r\n    transition: 200ms linear;\r\n\r\n    h3 {\r\n      font-size: 1.3rem;\r\n      margin: 0;\r\n      margin-bottom: 0.5rem;\r\n      padding: 0;\r\n    }\r\n    &:hover{\r\n      box-shadow: 0px 3px 20px rgba(25, 17, 34, 0.2);\r\n\r\n    }\r\n  }\r\n`;","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport styled from 'styled-components'\r\nimport Header from \"./header\"\r\nimport App from './app'\r\nimport { variables } from '../styles/variables'\r\nimport \"./layout.css\"\r\n\r\nconst MainWrapper = styled.main`\r\n  max-width: 90%;\r\n  margin: 0rem auto;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 1rem;\r\n  padding: 1rem 0rem;\r\n  @media only screen and (max-width: ${variables.large}) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n\r\n`;\r\n\r\nconst StyledFooter = styled.footer`\r\n  color: ${variables.primaryLightGray};\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst Gradient = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(90deg, ${variables.primaryBlue}, ${variables.primaryGreen});\r\n`;\r\n\r\nconst Layout = ({ children, location }) => {\r\n  return (\r\n    <App>\r\n      <Header />\r\n          <Spring \r\n            from={{ height: location.pathname === '/' ? 50 : 100 }} \r\n            to={{ height: location.pathname === '/' ? 100 : 50 }}>\r\n            {styles => (\r\n              <div style={{overflow: 'hidden', ...styles}}>\r\n                <Gradient/>\r\n              </div>\r\n            )}\r\n          </Spring>\r\n        <MainWrapper>\r\n            {children}\r\n        </MainWrapper>\r\n        <StyledFooter>\r\n          Â© {new Date().getFullYear()} Andrew Weiss\r\n        </StyledFooter>\r\n    </App>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nLayout.defaultProps = {\r\n  location: {},\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}