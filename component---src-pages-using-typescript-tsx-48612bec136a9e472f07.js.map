{"version":3,"sources":["webpack:///./src/pages/using-typescript.tsx","webpack:///./src/components/layout.js"],"names":["UsingTypescript","data","path","location","title","site","buildTime","href","to","query","MainWrapper","styled","main","variables","large","StyledFooter","footer","primaryLightGray","Gradient","div","primaryBlue","primaryGreen","Layout","children","from","height","pathname","styles","style","overflow","Date","getFullYear","defaultProps"],"mappings":"8FAAA,0GA6CeA,UAhCyC,SAAC,GAAD,IACtDC,EADsD,EACtDA,KACAC,EAFsD,EAEtDA,KACAC,EAHsD,EAGtDA,SAHsD,OAKtD,kBAAC,IAAD,CAAQA,SAAUA,GAChB,kBAAC,IAAD,CAAKC,MAAM,qBACX,sEACA,uEAC2C,wCAD3C,+DAE8C,2CAF9C,wEAKA,uEAC2C,0CAD3C,oBAEM,0CAFN,gBAEsC,yCAFtC,UAIA,6DACiCF,EADjC,uBAC2D,IACxDD,EAAKI,KAAKC,UAFb,KAIA,6DACkC,IAChC,uBAAGC,KAAK,6CAAR,kCAFF,KAOA,kBAAC,OAAD,CAAMC,GAAG,KAAT,6BAMG,IAAMC,EAAQ,c,iICtCfC,G,UAAcC,IAAOC,KAAV,sEAAGD,CAAH,iLAOsBE,IAAUC,QAM3CC,EAAeJ,IAAOK,OAAV,uEAAGL,CAAH,gCACPE,IAAUI,kBAIfC,EAAWP,IAAOQ,IAAV,mEAAGR,CAAH,sEAGyBE,IAAUO,YAAgBP,IAAUQ,cAGrEC,EAAS,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUpB,EAAe,EAAfA,SAC1B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACI,kBAAC,SAAD,CACEqB,KAAM,CAAEC,OAA8B,MAAtBtB,EAASuB,SAAmB,GAAK,KACjDlB,GAAI,CAAEiB,OAA8B,MAAtBtB,EAASuB,SAAmB,IAAM,MAC/C,SAAAC,GAAM,OACL,yBAAKC,MAAK,eAAGC,SAAU,UAAaF,IAClC,kBAACT,EAAD,UAIR,kBAACR,EAAD,KACKa,GAEL,kBAACR,EAAD,WACK,IAAIe,MAAOC,cADhB,mBAWRT,EAAOU,aAAe,CACpB7B,SAAU,IAGGmB","file":"component---src-pages-using-typescript-tsx-48612bec136a9e472f07.js","sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport React from \"react\";\nimport { PageProps, Link, graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\ntype DataProps = {\n  site: {\n    buildTime: string;\n  };\n};\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout location={location}>\n    <SEO title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>.tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.org/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n);\n\nexport default UsingTypescript;\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Spring } from 'react-spring/renderprops'\nimport styled from 'styled-components'\nimport Header from \"./header\"\nimport App from './app'\nimport { variables } from '../styles/variables'\nimport \"./layout.css\"\n\nconst MainWrapper = styled.main`\n  max-width: 90%;\n  margin: 0rem auto;\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  grid-gap: 1rem;\n  padding: 1rem 0rem;\n  @media only screen and (max-width: ${variables.large}) {\n        grid-template-columns: 1fr;\n    }\n\n`;\n\nconst StyledFooter = styled.footer`\n  color: ${variables.primaryLightGray};\n  font-size: 0.9rem;\n`;\n\nconst Gradient = styled.div`\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, ${variables.primaryBlue}, ${variables.primaryGreen});\n`;\n\nconst Layout = ({ children, location }) => {\n  return (\n    <App>\n      <Header />\n          <Spring \n            from={{ height: location.pathname === '/' ? 50 : 100 }} \n            to={{ height: location.pathname === '/' ? 100 : 50 }}>\n            {styles => (\n              <div style={{overflow: 'hidden', ...styles}}>\n                <Gradient/>\n              </div>\n            )}\n          </Spring>\n        <MainWrapper>\n            {children}\n        </MainWrapper>\n        <StyledFooter>\n          Â© {new Date().getFullYear()} Andrew Weiss\n        </StyledFooter>\n    </App>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nLayout.defaultProps = {\n  location: {},\n}\n\nexport default Layout\n"],"sourceRoot":""}