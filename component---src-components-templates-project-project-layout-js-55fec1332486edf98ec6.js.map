{"version":3,"sources":["webpack:///./src/components/projectArchive.js","webpack:///./src/components/lightbox.js","webpack:///./src/components/templates/project/projectLayout.js"],"names":["StyledAside","styled","aside","variables","large","ArchiveList","ul","headingFont","primaryFont","Archive","edges","allMarkdownRemark","map","edge","node","excerpt","frontmatter","title","slug","featuredImage","subtitle","key","to","className","fluid","childImageSharp","Lightbox","props","componentDidMount","window","addEventListener","handleKeyUp","handleClickCloseModal","componentWillUnmount","removeEventListener","handleClick","e","index","preventDefault","setState","showLightbox","state","selectedImage","lightBoxRef","current","contains","target","closeModal","goBack","goForward","keyCode","images","length","React","createRef","render","this","Gallery","img","i","GalleryItem","href","src","onClick","StyledImg","LightboxModal","visible","onKeyUp","handleKeyDown","LightboxContent","ref","icon","faWindowClose","Controls","Button","faArrowCircleLeft","faArrowCircleRight","Component","Img","div","button","primaryLight","primaryDark","StyledHTML","Container","primaryLightGray","primaryBlue","projectLayout","data","markdownRemark","html","github","website","date","tags","primaryTech","category","location","pageContext","next","prev","image","lightboxImagesArray","lightboxImages","dangerouslySetInnerHTML","__html","data-tip","faGlobe","faCode","tag","kebabCase","query"],"mappings":"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","file":"component---src-components-templates-project-project-layout-js-55fec1332486edf98ec6.js","sourcesContent":["import React from \"react\"\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\nimport { variables } from '../styles/variables'\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst StyledAside = styled.aside`\n  min-width: 300px;\n  max-width: 400px;\n  width: 100%;\n  margin: 0 auto;\n  @media only screen and (max-width: ${variables.large}) {\n        grid-template-columns: 1fr;\n        min-width: none;\n        max-width: 600px;\n    }\n`;\n\nconst ArchiveList = styled.ul`\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    text-align: left;\n    .container {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    .title {\n      font-weight: 500;\n      font-family: ${variables.headingFont};\n      font-size: 1.2rem;\n      margin: 0;\n      padding: 0;\n    }\n    a {\n        font-family: ${variables.primaryFont};\n        font-size: 0.8rem;\n        text-decoration: none;\n        color: #524567;\n        transition: 200ms linear;\n        &:hover {\n        box-shadow: 0px 3px 20px rgba(25, 17, 34, 0.1);\n      }\n    }\n    .image {\n      border-radius: 50%;\n      height: 50px;\n      min-width: 50px;\n      width: 50px;\n      object-fit: cover;\n      margin: 0rem 2rem 0.2rem 0.2rem;\n    }\n    hr {\n      margin-bottom: 1rem;\n    }\n   \n`;\n\nconst POST_ARCHIVE_QUERY = graphql`\nquery ProjectArchive {\n  allMarkdownRemark(limit: 5, filter: {frontmatter: {posttype: {eq: \"project\"}}}, sort: {order: ASC, fields: frontmatter___order}) {\n    edges {\n      node {\n        frontmatter {\n          title\n          slug\n          tags\n          subtitle\n          featuredImage {\n            childImageSharp {\n              fluid(maxWidth: 75) {\n                ...GatsbyImageSharpFluid\n              }\n           }\n        }\n        }\n        excerpt(pruneLength: 100)\n      }\n    }\n  }\n}\n`\n\nconst Archive = () => {\n  const data = useStaticQuery(POST_ARCHIVE_QUERY)\n  const { edges } = data.allMarkdownRemark;\n\n  return (\n    <>\n      <StyledAside>\n          <h3>Top Projects</h3>\n          <ArchiveList>\n            {edges.map((edge) => {\n                const { excerpt, frontmatter: { title, slug, subtitle, featuredImage }} = edge.node;\n               return ( \n                   <Link key={slug} to={`/projects${slug}`}>\n                        <li>\n                            <hr/>\n                            <div className=\"container\">\n                              <p className=\"title\">{title}</p>\n                              <Img className=\"image\" fluid={featuredImage.childImageSharp.fluid} />\n                            </div>\n                            <p>{excerpt}</p>\n                        </li>\n                    </Link>\n               )\n            })}\n          </ArchiveList>\n      </StyledAside>\n    </>\n  )\n}\n\nexport default Archive\n","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { variables } from '../styles/variables'\nimport Img from 'gatsby-image'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faWindowClose, faArrowCircleRight, faArrowCircleLeft } from '@fortawesome/free-solid-svg-icons' \n\nclass Lightbox extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      showLightbox: false,\n      selectedImage: 0,\n    }\n    this.lightBoxRef = React.createRef();\n  }\n  \n\n  componentDidMount = () => {\n    window.addEventListener('keyup', this.handleKeyUp, false)\n    window.addEventListener('click', this.handleClickCloseModal, true)\n  }\n\n  componentWillUnmount = () => {\n    window.removeEventListener('keyup', this.handleKeyUp, false)\n    window.removeEventListener('click', this.handleClickCloseModal, true)\n  }\n\n  handleClick = (e, index) => {\n    e.preventDefault()\n    this.setState({ showLightbox: !this.state.showLightbox, selectedImage: index })\n  }\n\n  handleClickCloseModal = (e) => {\n    if (!this.lightBoxRef.current.contains(e.target)) {\n      this.setState({ showLightbox: false })\n    }\n  }\n\n  closeModal = () => {\n    this.setState({ showLightbox: false })\n  }\n\n  goBack = () => {\n    this.setState({ selectedImage: this.state.selectedImage - 1 })\n  }\n\n  goForward = () => {\n    this.setState({ selectedImage: this.state.selectedImage + 1 })\n  }\n\n  handleKeyUp = e => {\n    e.preventDefault()\n    const { keyCode } = e\n    if (this.state.showLightbox) {\n      if (keyCode === 37) {\n        // Left Arrow Key\n        if (this.state.selectedImage > 0) {\n          this.setState({ selectedImage: this.state.selectedImage - 1 })\n        }\n      }\n      if (keyCode === 39) {\n        // Right Arrow Key\n        if (this.state.selectedImage < this.props.images.length - 1) {\n          this.setState({ selectedImage: this.state.selectedImage + 1 })\n        }\n      }\n      if (keyCode === 27) {\n        // Escape key\n        this.setState({ showLightbox: false })\n      }\n    }\n  }\n\n  render() {\n    const { images } = this.props\n    const { showLightbox, selectedImage } = this.state\n    return (\n      <Fragment>\n        <Gallery>\n          {images.map((img, i) => (\n            <GalleryItem key={i}>\n              <a href={img.src} onClick={e => this.handleClick(e, i)}>\n                <StyledImg fluid={img.fluid} />\n              </a>\n            </GalleryItem>\n          ))}\n        </Gallery>\n\n        <LightboxModal visible={showLightbox} onKeyUp={e => this.handleKeyDown(e)}>\n          <LightboxContent ref={this.lightBoxRef}>\n            <FontAwesomeIcon className=\"closeIcon\" icon={faWindowClose} onClick={this.closeModal}/>\n            <Img className=\"image\" fluid={images[selectedImage].fluid} />\n            <Controls>\n                {selectedImage === 0 ? <div></div> : <Button onClick={this.goBack}>\n                  <FontAwesomeIcon className=\"arrows\" icon={faArrowCircleLeft} />\n                </Button>}\n                {selectedImage === images.length - 1 ? <div></div> : <Button onClick={this.goForward}>\n                  <FontAwesomeIcon className=\"arrows\" icon={faArrowCircleRight} />\n                </Button>}\n            </Controls>\n          </LightboxContent>\n        </LightboxModal>\n      </Fragment>\n    )\n  }\n}\n\nconst StyledImg = styled(Img)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: -1;\n  height: 100%;\n  border-radius: 10px;\n  & > img {\n    object-fit: cover !important; \n    object-position: 0% 0% !important; \n    \n  }\n`\n\nconst Gallery = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  margin: 3rem 0rem;\n  cursor: pointer;\n  @media (min-width: 700px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media (min-width: 900px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n  @media (min-width: 1100px) {\n    grid-template-columns: repeat(5, 1fr);\n  }\n  grid-gap: 15px;\n  .gatsby-image-outer-wrapper {\n    height: 100%;\n  }\n`\n\nconst GalleryItem = styled.div`\n  position: relative;\n`\n\nconst Button = styled.button`\n  background-color: transparent;\n  border: none;\n  outline: none;\n  .arrows {\n    font-size: 1.5rem;\n    color: ${variables.primaryLight};\n    cursor: pointer;\n\n  }\n`\n\nconst LightboxModal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  max-height: 800px;\n  display: flex;\n  width: 100vw;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.5);\n  opacity: ${props => (props.visible ? '1' : '0')};\n  visibility: ${props => (props.visible ? 'visible' : 'hidden')};\n`\nconst LightboxContent = styled.div`\n  margin: 15px;\n  max-width: 700px;\n  width: 100%;\n  position: relative;\n  img {\n    border-radius: 10px;\n  }\n  .closeIcon {\n    position: absolute;\n    top: 7px;\n    right: 13px;\n    font-size: 1.5rem;\n    transition: 200ms ease-in-out;\n    color: ${variables.primaryDark};\n    cursor: pointer;\n    z-index: 10;\n    &:hover {\n      transform: scale(1.2);\n    }\n  }\n`\n\nconst Controls = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 0rem 2rem;\n  position: absolute;\n  width: 100%;\n  top: 50%;\n  \n`\n\nLightbox.propTypes = {\n  images: PropTypes.array,\n}\n\nexport default Lightbox","import React, { Component } from 'react'\nimport { graphql, Link } from 'gatsby'\nimport kebabCase from \"lodash/kebabCase\"\nimport ProjectArchive from '../../projectArchive'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCode, faGlobe, faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\nimport Img from \"gatsby-image\"\nimport Lightbox from '../../lightbox'\nimport Layout from '../../layout'\nimport styled from 'styled-components'\nimport Author from '../../author'\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { variables } from '../../../styles/variables'\nimport ReactTooltip from \"react-tooltip\";\n\n\nconst StyledHTML = styled.div`\n    p {\n        text-align: justify;\n        &:first-of-type :first-letter {\n            font-weight: 400;\n            font-size: 4rem;\n            line-height: 1;\n            float: left;\n            padding-right: 10px;\n            padding-left: 2px;\n            text-transform: uppercase;        \n        }\n    }\n    h2 {\n        position: relative;\n        padding: 0rem 1.5rem;\n        &:before {\n            position: absolute;\n            content: \"❝\";\n            font-size: 8rem;\n            color: #7f7f7f;\n            opacity: 0.2;\n            top: -2.5rem;\n            left: 0rem;\n        }\n    }\n\n   \n`;\n\nconst Container = styled.div`\n    position: relative;\n    width: 90%;\n    min-width: 300px;\n    max-width: 700px;\n    margin: 0 auto;\n    a {\n        text-decoration: none;\n    }\n    .icon {\n        display: flex;\n        align-items: center;\n        \n    }\n    h1 {\n        margin: 3rem 0rem 0.5rem 0rem;\n        font-weight: 500;\n    }\n    .subtitle {\n        color: ${variables.primaryLightGray};\n        font-size: 1.3rem;\n        margin-bottom: 3rem;\n    }\n    .tags {\n        width: 100%;\n        text-align: left;\n        p {\n        margin: 0;\n        padding: 0;\n        display: inline-block;\n\n        }\n        a {\n            margin-right: 1rem;\n            text-decoration: none;\n            color: ${variables.primaryLightGray};\n            transition: 100ms ease-in;\n            :hover {\n                color: ${variables.primaryBlue};\n                transform: scale(1.01);\n            }\n        }\n    }\n    .navigation {\n        display: flex;\n        justify-content: space-between;\n        a {\n            color: ${variables.primaryLightGray};\n            :hover {\n                color: ${variables.primaryDark};\n            }\n        }\n    }\n    ul {\n        list-style: none;\n        text-align: left;\n        margin: 0;\n        margin-bottom: 2rem;\n        li {\n            margin: 0;\n            padding: 0.2rem 0rem; \n        }\n    }\n    .lightboxContainer {\n        width: 100%;\n        margin-bottom: 1rem;\n    }\n    .imageContainer {\n        position: relative;\n        transition: .3s ease-in-out;\n        margin: 1rem 0rem 3rem 0rem;\n        &:hover .imageOverlay{\n            background: rgba(0,0,0,0);\n        }\n        &:hover button{\n            opacity: 1;\n        }\n        .imageOverlay{\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            z-index: 30;\n            transition: .3s ease-in-out;\n            background: rgba(0,0,0,0);\n            border-radius: 5px;\n        }\n        button {\n            cursor: pointer;\n            letter-spacing: 1px;\n            font-weight: 400;\n            transition: 200ms ease-in;\n            position: absolute;\n            opacity: 0;\n            top: 50%;\n            z-index: 50;\n            left: 50%;\n            outline: none;\n            transform: translate(-50%, -50%);\n            padding: 1rem 3rem;\n            color: ${variables.primaryLight};\n            font-size: 0.9rem;\n            border-radius: 5px;\n            background-color: rgba(0,0,0,.6);\n            text-decoration: none;\n            font-weight: 300;\n            text-transform: uppercase;\n            border-radius: 10px;\n            border: 1px solid rgba(0,0,0,0.5);\n            transition: .3s ease-in-out;\n            font-family: ${variables.headingFont};\n            box-shadow: 0px 3px 30px rgba(25, 17, 34, 0.2);\n            &:hover {\n                background: rgba(0,0,0,0.3);\n                box-shadow: 0px 3px 30px rgba(25, 17, 34, 0.4);\n\n            }\n            .exLink {\n                margin-left: 0.5rem;\n            }\n        }\n    }\n    .mainPhoto {\n        border-radius: 5px;\n        width: 100%;\n        max-width: 700px;\n        margin: 0 auto;\n        transition: 200ms linear; \n        box-shadow: 0px 3px 10px rgba(25, 17, 34, 0.15);\n        &:hover {\n\n        }\n    }\n    .metaInfo {\n        display: grid;\n        grid-template-columns: 150px 1fr;\n        grid-gap: 1rem;\n        justify-content: center;\n        align-items: center;\n        margin-bottom: 2rem;\n        @media only screen and (max-width: ${variables.large}) {\n            grid-template-columns: 1fr;\n        }\n    }\n    .links {\n        text-align: left;\n        margin: 0rem;\n        display: flex;\n        align-items: center;\n        .link {\n            width: 50px;\n            height: 50px;\n            font-size: 1.1rem;\n            border: solid 2px ${variables.primaryLightGray};\n            border-radius: 10px;\n            margin-right: 1rem;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            transition: 200ms ease-in;\n            a {\n                transition: 200ms ease-in;\n                color: ${variables.primaryLightGray};\n\n            }\n            &:hover {\n                box-shadow: 0px 0px 10px rgba(0,0,0,0.1);\n                border: solid 2px ${variables.primaryDark};\n                a {\n                    color: ${variables.primaryDark};\n                }\n            }\n        }\n    }\n`;\n\n\nexport default class projectLayout extends Component {\n    render() {\n        const { html, frontmatter: { title, github, website, date, tags, primaryTech, category, subtitle } } = this.props.data.markdownRemark;\n        const { location, pageContext: { next, prev } } = this.props;\n        const image = this.props.data.markdownRemark.frontmatter.featuredImage.childImageSharp.fluid;\n        const lightboxImagesArray = this.props.data.markdownRemark.frontmatter.lightboxImages.map(image => (image.childImageSharp)) || [];\n        return (\n            <Layout location={location}>\n                <Container>\n                    <h1>{title}</h1>\n                    <p className=\"subtitle\">{subtitle}</p>\n                    <Author date={date} category={category} primaryTech={primaryTech} />\n                    <div className=\"imageContainer\">\n                        <div className=\"imageOverlay\"></div>\n                        <Img className=\"mainPhoto\" fluid={image} />\n                        <a target=\"_blank\" href={website}>\n                            <button>\n                                Visit Site\n                            </button>\n                        </a>\n                    </div>\n                    <StyledHTML dangerouslySetInnerHTML={{\n                        __html: html\n                    }} />\n                    <div className=\"lightboxContainer\">\n                        {lightboxImagesArray.length > 0 ? <Lightbox images={lightboxImagesArray}/> : null}\n                    </div>\n                    <div className=\"metaInfo\">\n                        <div className=\"links\">\n                        <ReactTooltip />\n                            <div data-tip=\"Visit Website\" className=\"link\" ><a href={website} target=\"_blank\"><FontAwesomeIcon icon={faGlobe}/></a></div>\n                            <div data-tip=\"View Source Code\" className=\"link\" ><a href={github} target=\"_blank\"><FontAwesomeIcon icon={faCode}/></a></div>\n                        </div>\n                        <div className=\"tags\">\n                            {tags.map(tag => (\n                                <Link key={tag} to={`/tags/${kebabCase(tag)}`} ><p>#{tag}{`  `}</p></Link>\n                            ))}\n                        </div>\n                    </div>\n                    <div className=\"navigation\">\n                        {prev ?\n                            <Link className=\"icon\" to={`/projects${prev.frontmatter.slug}`}>\n                            <ArrowBackIosIcon /> Prev\n                            </Link> : <div></div>}   \n                        {next ?\n                            <Link className=\"icon\" to={`/projects${next.frontmatter.slug}`}>\n                                Next <ArrowForwardIosIcon />\n                            </Link> : <div></div>}\n                    </div>\n                </Container>\n                <ProjectArchive />\n            </Layout>\n        )\n    }\n}\n\nexport const query = graphql`\n    query ProjectQuery($slug: String!) {\n        markdownRemark(frontmatter: {\n            slug: {\n                eq: $slug\n            }\n        }) {\n            html\n            frontmatter {\n                title\n                date(fromNow: true)\n                slug\n                tags\n                posttype\n                subtitle\n                category\n                primaryTech\n                github\n                website\n                featuredImage {\n                    childImageSharp {\n                        fluid(quality: 100, maxWidth: 800) {\n                            ...GatsbyImageSharpFluid_tracedSVG\n                      }\n                   }\n                }\n                lightboxImages {\n                    childImageSharp {\n                        fluid(quality: 100, maxWidth: 800) {\n                            ...GatsbyImageSharpFluid_tracedSVG\n                      }\n                    }\n                  }\n            }\n        }\n    }\n`;"],"sourceRoot":""}