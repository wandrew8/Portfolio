{"version":3,"sources":["webpack:///./src/components/projectListing.js","webpack:///./src/pages/projects.js","webpack:///./src/components/projectArchive.js"],"names":["Post","styled","article","Listing","query","render","allMarkdownRemark","edges","map","edge","node","excerpt","frontmatter","slug","title","date","key","to","className","Projects","props","location","ArchiveList","ul","Archive","subtitle"],"mappings":"6vCAIMA,E,UAAOC,EAAOC,QAAV,uEAAGD,CAAH,gZAsEKE,EA3BC,kBACd,kBAAC,cAAD,CACEC,MAnBe,aAoBfC,OAAQ,YAA4B,IAAzBC,EAAwB,EAAxBA,kBACP,OACI,6BACGA,EAAkBC,MAAMC,KAAI,SAAAC,GAAS,IAAD,EACuBA,EAAKC,KAArDC,EADyB,EACzBA,QADyB,IAChBC,YAAeC,EADC,EACDA,KAAMC,EADL,EACKA,MAAOC,EADZ,EACYA,KAC7C,OACI,kBAACf,EAAD,CAAMgB,IAAKH,GACP,kBAAC,OAAD,CAAMI,GAAE,YAAcJ,GAClB,4BAAKC,IAET,+BAAQC,GACR,2BAAIJ,GACJ,kBAAC,OAAD,CAAMO,UAAU,YAAYD,GAAE,YAAcJ,GAA5C,mBAdxB,UCnCaM,UARE,SAACC,GAChB,OACE,kBAAC,IAAD,CAAQC,SAAUD,EAAMC,UACtB,kBAAC,EAAD,MACA,kBAAC,IAAD,S,2xCCJAC,E,UAAcrB,EAAOsB,GAAV,kFAAGtB,CAAH,yOA0DFuB,IA3BC,WACd,IACQjB,EADE,OACaD,kBAAfC,MAER,OACE,oCACE,+BACI,uCACA,kBAACe,EAAD,KACGf,EAAMC,KAAI,SAACC,GAAU,IAAD,EAC0CA,EAAKC,KAAxDC,EADS,EACTA,QADS,IACAC,YAAeE,EADf,EACeA,MAAOD,EADtB,EACsBA,KAAMY,EAD5B,EAC4BA,SAC9C,OACI,kBAAC,OAAD,CAAMT,IAAKH,EAAMI,GAAE,YAAcJ,GAC5B,4BACI,2BAAIC,GACJ,+BAAQW,GACR,2BAAId","file":"component---src-pages-projects-js-808c7b502fe6fb50931f.js","sourcesContent":["import React from \"react\"\r\nimport { StaticQuery, Link, graphql } from \"gatsby\"\r\nimport styled from 'styled-components'\r\n\r\nconst Post = styled.article`\r\n    box-shadow: 0px 3px 10px rgba(25, 17, 34, 0.05);\r\n    padding: 1rem;\r\n    border-radius: 4px;\r\n    margin-bottom: 1rem;\r\n    a {\r\n        color: black;\r\n        text-decoration: none;\r\n    }\r\n    p {\r\n        font-size: 0.8rem;\r\n    }\r\n    h2 {\r\n        margin-bottom: 0.5rem;\r\n    }\r\n    small {\r\n        color: gray;\r\n    }\r\n    .read-more {\r\n        font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\r\n        font-size: 0.8rem;\r\n        text-decoration: underline;\r\n        color: #524567;\r\n    }\r\n`;\r\n\r\nconst LISTING_QUERY = graphql`\r\nquery ProjectPostListing {\r\n    allMarkdownRemark(limit: 5, filter: {frontmatter: {posttype: {eq: \"project\"}}}, sort: {order: DESC, fields: frontmatter___date}) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          frontmatter {\r\n            title\r\n            slug\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Listing = () => (\r\n  <StaticQuery \r\n    query={LISTING_QUERY}\r\n    render={({ allMarkdownRemark }) => {\r\n        return (\r\n            <div>\r\n              {allMarkdownRemark.edges.map(edge => {\r\n                  const { excerpt, frontmatter: { slug, title, date } } = edge.node\r\n                  return (\r\n                      <Post key={slug}>\r\n                          <Link to={`/projects${slug}`}>\r\n                              <h2>{title}</h2>\r\n                          </Link>\r\n                          <small>{date}</small>\r\n                          <p>{excerpt}</p>\r\n                          <Link className=\"read-more\" to={`/projects${slug}`}>Read More</Link>\r\n                      </Post>\r\n                  )\r\n              })}\r\n            </div>\r\n        )\r\n    }}\r\n\r\n  />\r\n\r\n)\r\n\r\nexport default Listing\r\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport ProjectArchive from '../components/projectArchive'\nimport ProjectListing from '../components/projectListing'\n\nconst Projects = (props) => {\n  return(\n    <Layout location={props.location}>\n      <ProjectListing />\n      <ProjectArchive />\n    </Layout>\n  )}\n\nexport default Projects\n","import React from \"react\"\r\nimport { Link } from 'gatsby'\r\nimport styled from 'styled-components'\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst ArchiveList = styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    a {\r\n        font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\r\n        font-size: 0.8rem;\r\n        text-decoration: underline;\r\n        color: #524567;\r\n    }\r\n`;\r\n\r\nconst POST_ARCHIVE_QUERY = graphql`\r\nquery ProjectArchive {\r\n  allMarkdownRemark(limit: 10, filter: {frontmatter: {posttype: {eq: \"project\"}}}, sort: {order: DESC, fields: frontmatter___date}) {\r\n    edges {\r\n      node {\r\n        frontmatter {\r\n          title\r\n          slug\r\n          tags\r\n          subtitle\r\n        }\r\n        excerpt(pruneLength: 100)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`\r\n\r\nconst Archive = () => {\r\n  const data = useStaticQuery(POST_ARCHIVE_QUERY)\r\n  const { edges } = data.allMarkdownRemark;\r\n\r\n  return (\r\n    <>\r\n      <aside>\r\n          <h3>Archive</h3>\r\n          <ArchiveList>\r\n            {edges.map((edge) => {\r\n                const { excerpt, frontmatter: { title, slug, subtitle }} = edge.node;\r\n               return ( \r\n                   <Link key={slug} to={`/projects${slug}`}>\r\n                        <li>\r\n                            <p>{title}</p>\r\n                            <small>{subtitle}</small>\r\n                            <p>{excerpt}</p>\r\n                        </li>\r\n                    </Link>\r\n               )\r\n            })}\r\n          </ArchiveList>\r\n      </aside>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Archive\r\n"],"sourceRoot":""}