{"version":3,"sources":["webpack:///./src/components/projectListing.js"],"names":["GridContainer","styled","div","variables","medium","Button","button","primaryLightGray","Post","article","primaryWhite","props","project","primaryGreen","primaryBlue","Listing","query","render","allMarkdownRemark","edges","map","edge","node","frontmatter","slug","title","category","primaryTech","date","subtitle","image","featuredImage","childImageSharp","fluid","key","to","className"],"mappings":"+RAMaA,EAAgBC,IAAOC,IAAV,gFAAGD,CAAH,sLAMaE,IAAUC,QAOpCC,EAASJ,IAAOK,OAAV,yEAAGL,CAAH,+OAMKE,IAAUI,iBACrBJ,IAAUI,iBAONJ,IAAUI,kBAIdC,EAAOP,IAAOQ,QAAV,uEAAGR,CAAH,u9BAkBFE,IAAUO,cACL,SAAAC,GAAK,OAAIA,EAAMC,QAAUT,IAAUU,aAAeV,IAAUW,eAoGjEC,IA7BC,kBACd,kBAAC,cAAD,CACEC,MA5Be,aA6BfC,OAAQ,YAA4B,IAAzBC,EAAwB,EAAxBA,kBACP,OACI,kBAAClB,EAAD,KACGkB,EAAkBC,MAAMC,KAAI,SAAAC,GAAS,IAAD,EAC+CA,EAAKC,KAA7EC,YAAeC,EADU,EACVA,KAAMC,EADI,EACJA,MAAOC,EADH,EACGA,SAAUC,EADb,EACaA,YAAaC,EAD1B,EAC0BA,KAAMC,EADhC,EACgCA,SAC3DC,EAAQT,EAAKC,KAAKC,YAAYQ,cAAcC,gBAAgBC,MAClE,OACI,kBAACzB,EAAD,CAAM0B,IAAKV,GACP,kBAAC,OAAD,CAAMW,GAAE,YAAcX,GACpB,kBAAC,IAAD,CAAKY,UAAU,eAAeH,MAAOH,IACrC,4BAAKL,GACL,2BAAII,GACJ,kBAACxB,EAAD,KAASqB,GACT,+BAAQE,EAAR,MAAiBD,UAf3C,W","file":"94f01873e84ac4581817ec7333ccf2d02c901574-3ca0563d5ef7e3b2a0e2.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, Link, graphql } from \"gatsby\"\nimport { variables } from '../styles/variables'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\n\nexport const GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 300px);\n  grid-gap: 1rem;\n  justify-content: center;\n  margin-bottom: 2.5rem;\n  @media only screen and (max-width: ${variables.medium}) {\n        h2 {\n          font-size: 1.2rem;\n        }\n    }\n`;\n\nexport const Button = styled.button`\n    padding: 0rem 0.5rem;\n    text-align: center;\n    border-radius: 2px;\n    display: block;\n    font-size: 0.7rem;\n    border: solid 1px ${variables.primaryLightGray};\n    color: ${variables.primaryLightGray};\n    transition: 300ms ease-in;\n    cursor: pointer;\n    width: auto-fit;\n    background: transparent;\n    margin: 0.5rem 0rem;\n    &:hover {\n        color: ${variables.primaryLightGray};\n    }\n`;\n\nexport const Post = styled.article`\n    box-shadow: 0px 3px 10px rgba(25, 17, 34, 0.09);\n    padding: 1rem;\n    border-radius: 10px;\n    text-align: left;\n    transition: 200ms linear;\n    overflow: hidden;\n    cursor: pointer;\n    position: relative;\n    &:hover {\n      box-shadow: 0px 3px 20px rgba(25, 17, 34, 0.1);\n      & .projectImage {\n        transform: scale(1.01);\n      }\n    }\n    .posttype {\n      padding-left: 1rem;\n      position: absolute;\n      color: ${variables.primaryWhite};\n      background: ${props => props.project ? variables.primaryGreen : variables.primaryBlue };\n      padding: 0.1rem 1.5rem;\n      width: 100%;\n      font-size: 1rem;\n      z-index: 99;\n      margin: -1rem;\n      opacity: 0.5rem;\n      text-transform: uppercase;\n      opacity: 0.9;\n      text-align: left;\n      font-weight: 300;\n    }\n    .projectImage {\n      width: 100%;\n      max-width: 400px;\n      height: 175px;\n      object-fit: cover;\n      max-height: 230px;\n      border-radius: 10px;\n      margin: 0 auto;\n      transition: 200ms ease-out;\n    }\n    a {\n        color: black;\n        text-decoration: none;\n    }\n    p {\n        font-size: 0.8rem;\n        margin: 0.5rem 0rem;\n    }\n    h2 {\n        font-size: 1.5rem;\n        margin: 1.2rem 0rem 0.5rem 0rem;\n    }\n    small {\n        color: gray;\n    }\n    .read-more {\n        font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n        font-size: 0.8rem;\n        text-decoration: underline;\n        color: #524567;\n    }\n`;\n\nconst LISTING_QUERY = graphql`\nquery ProjectPostListing {\nallMarkdownRemark(limit: 100, filter: {frontmatter: {posttype: {eq: \"project\"}}}, sort: {order: ASC, fields: frontmatter___order}) {\n      edges {\n        node {\n          frontmatter {\n            title\n            slug\n            subtitle\n            category\n            primaryTech\n            date(fromNow: true)\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 300) {\n                  ...GatsbyImageSharpFluid\n                }\n             }\n          }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst Listing = () => (\n  <StaticQuery \n    query={LISTING_QUERY}\n    render={({ allMarkdownRemark }) => {\n        return (\n            <GridContainer>\n              {allMarkdownRemark.edges.map(edge => {\n                  const { frontmatter: { slug, title, category, primaryTech, date, subtitle } } = edge.node\n                  const image = edge.node.frontmatter.featuredImage.childImageSharp.fluid\n                  return (\n                      <Post key={slug}>\n                          <Link to={`/projects${slug}`}>\n                            <Img className=\"projectImage\" fluid={image} />\n                            <h2>{title}</h2>\n                            <p>{subtitle}</p>\n                            <Button>{category}</Button>\n                            <small>{date} | {primaryTech}</small>\n                          </Link>\n                      </Post>\n                  )\n              })}\n            </GridContainer>\n        )\n    }}\n\n  />\n\n)\n\nexport default Listing\n"],"sourceRoot":""}