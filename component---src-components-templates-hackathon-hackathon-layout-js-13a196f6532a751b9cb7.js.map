{"version":3,"sources":["webpack:///./src/components/templates/hackathon/hackathonLayout.js","webpack:///./src/components/layout.js","webpack:///./node_modules/@material-ui/icons/ArrowForwardIos.js","webpack:///./src/components/author.js","webpack:///./node_modules/@material-ui/icons/ArrowBackIos.js"],"names":["StyledHTML","styled","div","Container","variables","primaryLightGray","primaryBlue","primaryDark","primaryLight","headingFont","large","hackathonLayout","render","this","props","data","markdownRemark","html","frontmatter","title","dateFinished","github","website","date","tags","primaryTech","category","subtitle","timeAlloted","urlLink","heading","location","pageContext","next","prev","grid","className","src","width","height","data-url","dangerouslySetInnerHTML","__html","href","target","icon","faGlobe","faCode","map","tag","key","to","kebabCase","slug","Component","query","MainWrapper","main","StyledFooter","footer","Gradient","primaryGreen","Layout","children","useState","setWidth","useEffect","updateWindowDimensions","window","innerWidth","addEventListener","removeEventListener","from","pathname","styles","style","overflow","Date","getFullYear","defaultProps","_interopRequireDefault","Object","defineProperty","exports","value","_react","_default","createElement","d","AuthorContainer","small","Button","button","primaryWhite","Author","image","file","childImageSharp","fluid"],"mappings":"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","file":"component---src-components-templates-hackathon-hackathon-layout-js-13a196f6532a751b9cb7.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { graphql, Link } from 'gatsby'\r\nimport kebabCase from \"lodash/kebabCase\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCode, faGlobe, faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport Img from \"gatsby-image\"\r\nimport Layout from '../../layout'\r\nimport styled from 'styled-components'\r\nimport Author from '../../author'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { variables } from '../../../styles/variables'\r\n\r\nconst StyledHTML = styled.div`\r\n    p {\r\n        text-align: justify;\r\n        margin: 2rem 0rem;\r\n    }\r\n    h2 {\r\n        position: relative;\r\n        padding: 0rem 1.5rem;\r\n    }\r\n\r\n   \r\n`;\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    width: 90%;\r\n    min-width: 300px;\r\n    max-width: 900px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    iframe {\r\n        margin: 0 auto;\r\n    }\r\n    .aspect-ratio {\r\n        width: 90vw;\r\n        max-width: 900px\r\n    }\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n    .icon {\r\n        display: flex;\r\n        align-items: center;\r\n        \r\n    }\r\n    h1 {\r\n        margin: 3rem 0rem 0.5rem 0rem;\r\n        font-weight: 500;\r\n    }\r\n    .subtitle {\r\n        color: ${variables.primaryLightGray};\r\n        font-size: 1.3rem;\r\n        margin-bottom: 3rem;\r\n    }\r\n    .tags {\r\n        width: 100%;\r\n        text-align: left;\r\n        p {\r\n        margin: 0;\r\n        padding: 0;\r\n        display: inline-block;\r\n\r\n        }\r\n        a {\r\n            margin-right: 1rem;\r\n            text-decoration: none;\r\n            color: ${variables.primaryLightGray};\r\n            transition: 100ms ease-in;\r\n            :hover {\r\n                color: ${variables.primaryBlue};\r\n                transform: scale(1.01);\r\n            }\r\n        }\r\n    }\r\n    .navigation {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        a {\r\n            color: ${variables.primaryLightGray};\r\n            :hover {\r\n                color: ${variables.primaryDark};\r\n            }\r\n        }\r\n    }\r\n    ul {\r\n        list-style: none;\r\n        text-align: left;\r\n        margin: 0;\r\n        margin-bottom: 2rem;\r\n        li {\r\n            margin: 0;\r\n            padding: 0.2rem 0rem; \r\n        }\r\n    }\r\n    .lightboxContainer {\r\n        width: 100%;\r\n        margin-bottom: 1rem;\r\n    }\r\n    .imageContainer {\r\n        position: relative;\r\n        transition: .3s ease-in-out;\r\n        margin: 1rem 0rem 3rem 0rem;\r\n        &:hover .imageOverlay{\r\n            background: rgba(0,0,0,0);\r\n        }\r\n        &:hover button{\r\n            opacity: 1;\r\n        }\r\n        .imageOverlay{\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            z-index: 30;\r\n            transition: .3s ease-in-out;\r\n            background: rgba(0,0,0,0);\r\n            border-radius: 5px;\r\n        }\r\n        button {\r\n            cursor: pointer;\r\n            letter-spacing: 1px;\r\n            font-weight: 400;\r\n            transition: 200ms ease-in;\r\n            position: absolute;\r\n            opacity: 0;\r\n            top: 50%;\r\n            z-index: 50;\r\n            left: 50%;\r\n            outline: none;\r\n            transform: translate(-50%, -50%);\r\n            padding: 1rem 3rem;\r\n            color: ${variables.primaryLight};\r\n            font-size: 0.9rem;\r\n            border-radius: 5px;\r\n            background-color: rgba(0,0,0,.6);\r\n            text-decoration: none;\r\n            font-weight: 300;\r\n            text-transform: uppercase;\r\n            border-radius: 10px;\r\n            border: 1px solid rgba(0,0,0,0.5);\r\n            transition: .3s ease-in-out;\r\n            font-family: ${variables.headingFont};\r\n            box-shadow: 0px 3px 30px rgba(25, 17, 34, 0.2);\r\n            &:hover {\r\n                background: rgba(0,0,0,0.3);\r\n                box-shadow: 0px 3px 30px rgba(25, 17, 34, 0.4);\r\n\r\n            }\r\n            .exLink {\r\n                margin-left: 0.5rem;\r\n            }\r\n        }\r\n    }\r\n    .mainPhoto {\r\n        border-radius: 5px;\r\n        width: 100%;\r\n        max-width: 700px;\r\n        margin: 0 auto;\r\n        transition: 200ms linear; \r\n        box-shadow: 0px 3px 10px rgba(25, 17, 34, 0.15);\r\n        &:hover {\r\n\r\n        }\r\n    }\r\n    .metaInfo {\r\n        display: grid;\r\n        grid-template-columns: 150px 1fr;\r\n        grid-gap: 1rem;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin-bottom: 2rem;\r\n        @media only screen and (max-width: ${variables.large}) {\r\n            grid-template-columns: 1fr;\r\n        }\r\n    }\r\n    .info {\r\n        color: ${variables.primaryLightGray};\r\n        font-size: 0.9rem;\r\n        text-align: left;\r\n        p {\r\n            margin: 0.1rem;\r\n        }\r\n    }\r\n    .links {\r\n        text-align: left;\r\n        margin: 0rem;\r\n        display: flex;\r\n        align-items: center;\r\n        .link {\r\n            width: 50px;\r\n            height: 50px;\r\n            font-size: 1.1rem;\r\n            border: solid 2px ${variables.primaryLightGray};\r\n            border-radius: 10px;\r\n            margin-right: 1rem;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            transition: 200ms ease-in;\r\n            a {\r\n                transition: 200ms ease-in;\r\n                color: ${variables.primaryLightGray};\r\n\r\n            }\r\n            &:hover {\r\n                box-shadow: 0px 0px 10px rgba(0,0,0,0.1);\r\n                border: solid 2px ${variables.primaryDark};\r\n                a {\r\n                    color: ${variables.primaryDark};\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport default class hackathonLayout extends Component {\r\n    render() {\r\n        const { html, frontmatter: { title, dateFinished, github, website, date, tags, primaryTech, category, subtitle, timeAlloted, urlLink, heading  } } = this.props.data.markdownRemark;\r\n        const { location, pageContext: { next, prev } } = this.props;\r\n        return (\r\n            <Layout grid={true} location={location}>\r\n                <Container>\r\n                    <h1>{title}</h1>\r\n                    <p className=\"subtitle\">{subtitle}</p>\r\n                    <Author date={date} category={category} primaryTech={primaryTech} />\r\n                    <div className=\"aspect-ratio\">\r\n                        <iframe src={urlLink} width=\"100%\" height=\"500px\" data-url={urlLink}></iframe>\r\n                    </div>\r\n                    <h2>{heading}</h2>\r\n                    <div className=\"info\">\r\n                        <p>Length: {timeAlloted}</p>\r\n                        <p>Date: {dateFinished}</p>\r\n                    </div>\r\n                    <StyledHTML dangerouslySetInnerHTML={{\r\n                        __html: html\r\n                    }} />\r\n                    <div className=\"metaInfo\">\r\n                        <div className=\"links\">\r\n                            <div className=\"link\" ><a href={website} target=\"_blank\"><FontAwesomeIcon icon={faGlobe}/></a></div>\r\n                            <div className=\"link\" ><a href={github} target=\"_blank\"><FontAwesomeIcon icon={faCode}/></a></div>\r\n                        </div>\r\n                        <div className=\"tags\">\r\n                            {tags.map(tag => (\r\n                                <Link key={tag} to={`/tags/${kebabCase(tag)}`} ><p>#{tag}{`  `}</p></Link>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"navigation\">\r\n                        {prev ?\r\n                            <Link className=\"icon\" to={`/hackathon${prev.frontmatter.slug}`}>\r\n                            <ArrowBackIosIcon /> Prev\r\n                            </Link> : <div></div>}   \r\n                        {next ?\r\n                            <Link className=\"icon\" to={`/hackathon${next.frontmatter.slug}`}>\r\n                                Next <ArrowForwardIosIcon />\r\n                            </Link> : <div></div>}\r\n                    </div>\r\n                </Container>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport const query = graphql`\r\n    query HackathonQuery($slug: String!) {\r\n        markdownRemark(frontmatter: {\r\n            slug: {\r\n                eq: $slug\r\n            }\r\n        }) {\r\n            html\r\n            frontmatter {\r\n                title\r\n                date(fromNow: true)\r\n                slug\r\n                tags\r\n                posttype\r\n                subtitle\r\n                category\r\n                primaryTech\r\n                github\r\n                website\r\n                urlLink\r\n                heading\r\n                dateFinished(formatString: \"MMMM DD, YYYY\")\r\n                timeAlloted\r\n                featuredImage {\r\n                    childImageSharp {\r\n                        fluid(quality: 100, maxWidth: 800) {\r\n                            ...GatsbyImageSharpFluid_tracedSVG\r\n                      }\r\n                   }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;","import React, { useEffect, useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Spring } from 'react-spring/renderprops'\nimport styled from 'styled-components'\nimport Header from \"./header\"\nimport App from './app'\nimport HeaderDrawer from './HeaderDrawer'\nimport { variables } from '../styles/variables'\nimport \"./layout.css\"\n\nconst MainWrapper = styled.main`\n  max-width: 90%;\n  margin: 0rem auto;\n  margin-bottom: 3rem;\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  grid-gap: 1rem;\n  padding: 1rem 0rem;\n  @media only screen and (max-width: ${variables.large}) {\n        grid-template-columns: 1fr;\n    }\n\n`;\n\nconst StyledFooter = styled.footer`\n  color: ${variables.primaryLightGray};\n  font-size: 0.9rem;\n`;\n\nconst Gradient = styled.div`\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, ${variables.primaryBlue}, ${variables.primaryGreen});\n`;\n\nconst Layout = ({ children, grid, location }) => {\n  const [ width, setWidth ] = useState();\n  useEffect(() => {\n    const updateWindowDimensions = () => {\n      setWidth(window.innerWidth);\n    }\n    setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", updateWindowDimensions);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateWindowDimensions);    };\n  });\n  return (\n    <App>\n      {width > 756 ? <Header /> : <HeaderDrawer />}\n          <Spring \n            from={{ height: location.pathname === '/' ? 100 : 150 }} \n            to={{ height: location.pathname === '/' ? 150 : 100 }}>\n            {styles => (\n              <div style={{overflow: 'hidden', ...styles}}>\n                <Gradient/>\n              </div>\n            )}\n          </Spring>\n          {grid ? <div>\n            {children}\n          </div> : \n        <MainWrapper>\n            {children}\n        </MainWrapper>\n          }\n        <StyledFooter>\n          © {new Date().getFullYear()} Andrew Weiss\n        </StyledFooter>\n    </App>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nLayout.defaultProps = {\n  location: {},\n}\n\nexport default Layout\n","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon[\"default\"])(_react[\"default\"].createElement(\"path\", {\n  d: \"M5.88 4.12L13.76 12l-7.88 7.88L8 22l10-10L8 2z\"\n}), 'ArrowForwardIos');\n\nexports[\"default\"] = _default;","import React from 'react'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\nimport styled from 'styled-components'\r\nimport PropTypes from \"prop-types\"\r\nimport { variables } from '../styles/variables'\r\n\r\nconst AuthorContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 50px 1fr 1fr;\r\n    grid-gap: 1rem;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: left;\r\n    margin: 1rem 0rem;\r\n    @media only screen and (max-width: ${variables.small}) {\r\n            grid-template-columns: 50px 1fr;\r\n            .buttonHolder {\r\n                display: none;\r\n            }\r\n    }\r\n    .authorName {\r\n        font-style: italic;\r\n    }\r\n    p {\r\n        margin: 0;\r\n        padding: 0;\r\n        font-size: 0.8rem;\r\n    }\r\n    .middle {\r\n        margin: 0rem 0.5rem;\r\n    }\r\n    .avatarImg {\r\n        width: 50px;\r\n        height: 50px;\r\n        border-radius: 50%;\r\n        object-fit: cover;\r\n\r\n    }\r\n    .date {\r\n        display: flex;\r\n        color: ${variables.primaryLightGray}\r\n    }\r\n    .buttonHolder {\r\n        justify-self: flex-end;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 0.2rem 0.5rem;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    display: block;\r\n    border: solid 2px ${variables.primaryBlue};\r\n    color: ${variables.primaryBlue};\r\n    transition: 300ms ease-in;\r\n    cursor: pointer;\r\n    width: auto-fit;\r\n    background: transparent;\r\n    margin: 0.5rem 0rem;\r\n    &:hover {\r\n        border: solid 2px ${variables.primaryBlue};\r\n        color: ${variables.primaryWhite};\r\n        background-color: ${variables.primaryBlue};\r\n    }\r\n`;\r\n\r\nexport default function Author(props) { \r\n    const data = useStaticQuery(graphql`\r\n    query imageQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n      file(relativePath: {\r\n        regex: \"/avatar/\"\r\n      }) {\r\n        childImageSharp {\r\n          fluid(maxWidth: 100, quality: 100) {\r\n            ...GatsbyImageSharpFluid_tracedSVG\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  const image = data.file.childImageSharp.fluid\r\n  const { date, category, primaryTech } = props;\r\n    return (\r\n        <AuthorContainer>\r\n            <Img className=\"avatarImg\" fluid={image} />\r\n            <div className=\"dateInfo\">\r\n                <p className=\"authorName\">By Andrew Weiss</p>\r\n                <div className=\"date\">\r\n                    <p>{date} </p>\r\n                    <p className=\"middle\"> | </p>\r\n                    <p>{primaryTech}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"buttonHolder\">\r\n                <Button>\r\n                    {category}\r\n                </Button>\r\n            </div>\r\n        </AuthorContainer>\r\n    )\r\n}\r\n\r\n\r\n\r\n  Author.propTypes = {\r\n      date: PropTypes.string,\r\n      category: PropTypes.string,\r\n      primaryTech: PropTypes.string,\r\n  }","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon[\"default\"])(_react[\"default\"].createElement(\"path\", {\n  d: \"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"\n}), 'ArrowBackIos');\n\nexports[\"default\"] = _default;"],"sourceRoot":""}