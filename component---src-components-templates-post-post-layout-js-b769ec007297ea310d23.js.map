{"version":3,"sources":["webpack:///./src/components/templates/post/postLayout.js","webpack:///./src/components/postArchive.js"],"names":["postLayout","render","this","props","data","markdownRemark","html","frontmatter","title","date","tags","location","pageContext","next","prev","image","featuredImage","childImageSharp","fluid","dangerouslySetInnerHTML","__html","className","map","tag","key","to","slug","Component","query","ArchiveList","styled","ul","Archive","edges","allMarkdownRemark","edge","node"],"mappings":"wQAMqBA,E,gLACjBC,OAAA,WAAU,IAAD,EACgDC,KAAKC,MAAMC,KAAKC,eAA7DC,EADH,EACGA,KADH,IACSC,YAAeC,EADxB,EACwBA,MAAOC,EAD/B,EAC+BA,KAAMC,EADrC,EACqCA,KADrC,EAE6CR,KAAKC,MAA/CQ,EAFH,EAEGA,SAFH,IAEaC,YAAeC,EAF5B,EAE4BA,KAAMC,EAFlC,EAEkCA,KACjCC,EAAQb,KAAKC,MAAMC,KAAKC,eAAeE,YAAYS,cAAcC,gBAAgBC,MACvF,OACI,kBAAC,IAAD,CAAQP,SAAUA,GACd,6BACI,4BAAKH,GACL,2BAAIC,GACJ,kBAAC,IAAD,CAAKS,MAAOH,IACZ,yBAAKI,wBAAyB,CAC1BC,OAAQd,KAEZ,yBAAKe,UAAU,QACVX,EAAKY,KAAI,SAAAC,GAAG,OACT,kBAAC,OAAD,CAAMC,IAAKD,EAAKE,GAAE,eAAiBF,GAAQ,+BAAKA,QAGvDV,GACG,kBAAC,OAAD,CAAMY,GAAE,SAAWZ,EAAKN,YAAYmB,MAApC,QAGHZ,GACG,kBAAC,OAAD,CAAMW,GAAE,SAAWX,EAAKP,YAAYmB,MAApC,SAIR,kBAAC,IAAD,Q,GA5BwBC,aAkC3BC,EAAK,c,mFCnCZC,E,UAAcC,EAAOC,GAAV,0EAAGD,CAAH,yOAuDFE,IAzBC,WACd,IACQC,EADE,OACaC,kBAAfD,MAER,OACE,oCACE,+BACI,uCACA,kBAACJ,EAAD,KACGI,EAAMX,KAAI,SAACa,GAAU,IAAD,EACOA,EAAKC,KAAK7B,YAA1BC,EADS,EACTA,MAAOkB,EADE,EACFA,KAChB,OACI,kBAAC,OAAD,CAAMF,IAAKE,EAAMD,GAAE,SAAWC,GACzB,4BACKlB,Y","file":"component---src-components-templates-post-post-layout-js-b769ec007297ea310d23.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { graphql, Link } from 'gatsby'\r\nimport PostArchive from '../../postArchive'\r\nimport Img from \"gatsby-image\"\r\nimport Layout from '../../layout'\r\n\r\nexport default class postLayout extends Component {\r\n    render() {\r\n        const { html, frontmatter: { title, date, tags } } = this.props.data.markdownRemark;\r\n        const { location, pageContext: { next, prev } } = this.props;\r\n        const image = this.props.data.markdownRemark.frontmatter.featuredImage.childImageSharp.fluid;\r\n        return (\r\n            <Layout location={location}>\r\n                <div>\r\n                    <h1>{title}</h1>\r\n                    <p>{date}</p>\r\n                    <Img fluid={image} />\r\n                    <div dangerouslySetInnerHTML={{\r\n                        __html: html\r\n                    }} />\r\n                    <div className=\"tags\">\r\n                        {tags.map(tag => (\r\n                            <Link key={tag} to={`/posts/type/${tag}`} ><p>#{tag}</p></Link>\r\n                        ))}\r\n                    </div>\r\n                    {next &&\r\n                        <Link to={`/posts${next.frontmatter.slug}`}>\r\n                            Next\r\n                        </Link> }\r\n                    {prev &&\r\n                        <Link to={`/posts${prev.frontmatter.slug}`}>\r\n                            Prev\r\n                        </Link>}                        \r\n                </div>\r\n                <PostArchive />\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport const query = graphql`\r\n    query PostQuery($slug: String!) {\r\n        markdownRemark(frontmatter: {\r\n            slug: {\r\n                eq: $slug\r\n            }\r\n        }) {\r\n            html\r\n            frontmatter {\r\n                title\r\n                date(formatString: \"MMMM DD, YYYY\")\r\n                slug\r\n                tags\r\n                featuredImage {\r\n                    childImageSharp {\r\n                      fluid(maxWidth: 800) {\r\n                        ...GatsbyImageSharpFluid\r\n                      }\r\n                   }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;","import React from \"react\"\r\nimport { Link } from 'gatsby'\r\nimport styled from 'styled-components'\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst ArchiveList = styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    a {\r\n        font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\r\n        font-size: 0.8rem;\r\n        text-decoration: underline;\r\n        color: #524567;\r\n    }\r\n`;\r\n\r\nconst POST_ARCHIVE_QUERY = graphql`\r\nquery PostArchive {\r\n  allMarkdownRemark(limit: 5, filter: {frontmatter: {posttype: {eq: \"post\"}}}, sort: {order: DESC, fields: frontmatter___date}) {\r\n    edges {\r\n      node {\r\n        frontmatter {\r\n          title\r\n          slug\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          tags\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`\r\n\r\nconst Archive = () => {\r\n  const data = useStaticQuery(POST_ARCHIVE_QUERY)\r\n  const { edges } = data.allMarkdownRemark;\r\n\r\n  return (\r\n    <>\r\n      <aside>\r\n          <h3>Archive</h3>\r\n          <ArchiveList>\r\n            {edges.map((edge) => {\r\n                const { title, slug } = edge.node.frontmatter;\r\n               return ( \r\n                   <Link key={slug} to={`/posts${slug}`}>\r\n                        <li>\r\n                            {title}\r\n                        </li>\r\n                    </Link>\r\n               )\r\n            })}\r\n          </ArchiveList>\r\n      </aside>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Archive\r\n"],"sourceRoot":""}