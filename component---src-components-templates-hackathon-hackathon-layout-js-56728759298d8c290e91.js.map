{"version":3,"sources":["webpack:///./src/components/templates/hackathon/hackathonLayout.js"],"names":["StyledHTML","styled","div","Container","variables","primaryLightGray","primaryWhite","primaryBlue","primaryDark","primaryLight","headingFont","large","hackathonLayout","render","this","props","data","markdownRemark","html","frontmatter","title","dateFinished","github","website","date","tags","primaryTech","category","subtitle","timeAlloted","urlLink","heading","location","pageContext","next","prev","grid","className","href","target","src","width","height","data-url","dangerouslySetInnerHTML","__html","data-tip","icon","faGlobe","faCode","map","tag","key","to","kebabCase","slug","Component","query"],"mappings":"uXAeA,IAAMA,EAAaC,IAAOC,IAAV,8EAAGD,CAAH,uFAaVE,EAAYF,IAAOC,IAAV,6EAAGD,CAAH,oyFA8BiBG,IAAUC,iBACrBD,IAAUC,iBAILD,IAAUE,aAGNF,IAAUC,iBACfD,IAAUE,aAgBlBF,IAAUC,iBAgBND,IAAUC,iBAGND,IAAUG,YASdH,IAAUC,iBAEND,IAAUI,YAoDdJ,IAAUK,aAUJL,IAAUM,YA8BQN,IAAUO,MAKtCP,IAAUC,iBAgBKD,IAAUC,iBASjBD,IAAUC,iBAKCD,IAAUI,YAEjBJ,IAAUI,aAQlBI,E,gLACjBC,OAAA,WAAU,IAAD,EACgJC,KAAKC,MAAMC,KAAKC,eAA7JC,EADH,EACGA,KADH,IACSC,YAAeC,EADxB,EACwBA,MAAOC,EAD/B,EAC+BA,aAAcC,EAD7C,EAC6CA,OAAQC,EADrD,EACqDA,QAASC,EAD9D,EAC8DA,KAAMC,EADpE,EACoEA,KAAMC,EAD1E,EAC0EA,YAAaC,EADvF,EACuFA,SAAUC,EADjG,EACiGA,SAAUC,EAD3G,EAC2GA,YAAaC,EADxH,EACwHA,QAASC,EADjI,EACiIA,QADjI,EAE6CjB,KAAKC,MAA/CiB,EAFH,EAEGA,SAFH,IAEaC,YAAeC,EAF5B,EAE4BA,KAAMC,EAFlC,EAEkCA,KACvC,OACI,kBAAC,IAAD,CAAQC,MAAM,EAAMJ,SAAUA,GAC1B,kBAAC7B,EAAD,KACI,4BAAKiB,GACL,uBAAGiB,UAAU,YAAYT,GACzB,kBAAC,IAAD,CAAQJ,KAAMA,EAAMG,SAAUA,EAAUD,YAAaA,IACrD,yBAAKW,UAAU,gBACf,uBAAGC,KAAMf,EAASgB,OAAO,UAAS,kDAC9B,4BAAQC,IAAKV,EAASW,MAAM,OAAOC,OAAO,QAAQC,WAAUb,KAEhE,4BAAKC,GACL,yBAAKM,UAAU,QACX,sCAAYR,GACZ,oCAAUR,IAEd,kBAACrB,EAAD,CAAY4C,wBAAyB,CACjCC,OAAQ3B,KAEZ,yBAAKmB,UAAU,YACX,yBAAKA,UAAU,SACf,kBAAC,IAAD,MACI,yBAAKS,WAAS,gBAAgBT,UAAU,QAAQ,uBAAGC,KAAMf,EAASgB,OAAO,UAAS,kBAAC,IAAD,CAAiBQ,KAAMC,QACzG,yBAAKF,WAAS,mBAAmBT,UAAU,QAAQ,uBAAGC,KAAMhB,EAAQiB,OAAO,UAAS,kBAAC,IAAD,CAAiBQ,KAAME,SAE/G,yBAAKZ,UAAU,QACVZ,EAAKyB,KAAI,SAAAC,GAAG,OACT,kBAAC,OAAD,CAAMC,IAAKD,EAAKE,GAAE,SAAWC,IAAUH,IAAS,+BAAKA,EAAL,YAI5D,yBAAKd,UAAU,cACVF,EACG,kBAAC,OAAD,CAAME,UAAU,OAAOgB,GAAE,aAAelB,EAAKhB,YAAYoC,MACzD,kBAAC,IAAD,MADA,SAEU,8BACbrB,EACG,kBAAC,OAAD,CAAMG,UAAU,OAAOgB,GAAE,aAAenB,EAAKf,YAAYoC,MAAzD,QACS,kBAAC,IAAD,OACC,kC,GA1COC,aAkDhCC,EAAK","file":"component---src-components-templates-hackathon-hackathon-layout-js-56728759298d8c290e91.js","sourcesContent":["import React, { Component } from 'react'\nimport { graphql, Link } from 'gatsby'\nimport kebabCase from \"lodash/kebabCase\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCode, faGlobe, faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\nimport Img from \"gatsby-image\"\nimport Layout from '../../layout'\nimport styled from 'styled-components'\nimport Author from '../../author'\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { variables } from '../../../styles/variables'\nimport ReactTooltip from \"react-tooltip\";\n\n\nconst StyledHTML = styled.div`\n    p {\n        text-align: justify;\n        margin: 2rem 0rem;\n    }\n    h2 {\n        position: relative;\n        padding: 0rem 1.5rem;\n    }\n\n   \n`;\n\nconst Container = styled.div`\n    position: relative;\n    width: 90%;\n    min-width: 300px;\n    max-width: 900px;\n    margin: 0 auto;\n    text-align: center;\n    iframe {\n        margin: 0 auto;\n    }\n    .aspect-ratio {\n        width: 90vw;\n        max-width: 900px;\n        position: relative;\n        iframe {\n            outline: none;\n            border: none;\n            box-shadow: 0px 0px 10px rgba(0,0,0,0.1);\n            border-radius: 10px;\n            margin: 1.5rem 0rem;\n        }\n        button {\n            position: absolute;\n            bottom: 40px;\n            left: 8px;\n            padding: 0rem 0.5rem;\n            text-align: center;\n            border-radius: 2px;\n            display: block;\n            font-size: 0.7rem;\n            border: solid 1px ${variables.primaryLightGray};\n            color: ${variables.primaryLightGray};\n            transition: 300ms ease-in;\n            cursor: pointer;\n            width: auto-fit;\n            background: ${variables.primaryWhite};\n            z-index: 100;\n            &:hover {\n                background: ${variables.primaryLightGray};\n                color: ${variables.primaryWhite};\n            }\n    }\n    a \n        text-decoration: none;\n    }\n    .icon {\n        display: flex;\n        align-items: center;\n        \n    }\n    h1 {\n        margin: 3rem 0rem 0.5rem 0rem;\n        font-weight: 500;\n    }\n    .subtitle {\n        color: ${variables.primaryLightGray};\n        font-size: 1.3rem;\n        margin-bottom: 3rem;\n    }\n    .tags {\n        width: 100%;\n        text-align: left;\n        p {\n        margin: 0;\n        padding: 0;\n        display: inline-block;\n\n        }\n        a {\n            margin-right: 1rem;\n            text-decoration: none;\n            color: ${variables.primaryLightGray};\n            transition: 100ms ease-in;\n            :hover {\n                color: ${variables.primaryBlue};\n                transform: scale(1.01);\n            }\n        }\n    }\n    .navigation {\n        display: flex;\n        justify-content: space-between;\n        a {\n            color: ${variables.primaryLightGray};\n            :hover {\n                color: ${variables.primaryDark};\n            }\n        }\n    }\n    ul {\n        list-style: none;\n        text-align: left;\n        margin: 0;\n        margin-bottom: 2rem;\n        li {\n            margin: 0;\n            padding: 0.2rem 0rem; \n        }\n    }\n    .lightboxContainer {\n        width: 100%;\n        margin-bottom: 1rem;\n    }\n    .imageContainer {\n        position: relative;\n        transition: .3s ease-in-out;\n        margin: 1rem 0rem 3rem 0rem;\n        &:hover .imageOverlay{\n            background: rgba(0,0,0,0);\n        }\n        &:hover button{\n            opacity: 1;\n        }\n        .imageOverlay{\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            z-index: 30;\n            transition: .3s ease-in-out;\n            background: rgba(0,0,0,0);\n            border-radius: 5px;\n        }\n        button {\n            cursor: pointer;\n            letter-spacing: 1px;\n            font-weight: 400;\n            transition: 200ms ease-in;\n            position: absolute;\n            opacity: 0;\n            top: 50%;\n            z-index: 50;\n            left: 50%;\n            outline: none;\n            transform: translate(-50%, -50%);\n            padding: 1rem 3rem;\n            color: ${variables.primaryLight};\n            font-size: 0.9rem;\n            border-radius: 5px;\n            background-color: rgba(0,0,0,.6);\n            text-decoration: none;\n            font-weight: 300;\n            text-transform: uppercase;\n            border-radius: 10px;\n            border: 1px solid rgba(0,0,0,0.5);\n            transition: .3s ease-in-out;\n            font-family: ${variables.headingFont};\n            box-shadow: 0px 3px 30px rgba(25, 17, 34, 0.2);\n            &:hover {\n                background: rgba(0,0,0,0.3);\n                box-shadow: 0px 3px 30px rgba(25, 17, 34, 0.4);\n\n            }\n            .exLink {\n                margin-left: 0.5rem;\n            }\n        }\n    }\n    .mainPhoto {\n        border-radius: 5px;\n        width: 100%;\n        max-width: 700px;\n        margin: 0 auto;\n        transition: 200ms linear; \n        box-shadow: 0px 3px 10px rgba(25, 17, 34, 0.15);\n        &:hover {\n\n        }\n    }\n    .metaInfo {\n        display: grid;\n        grid-template-columns: 150px 1fr;\n        grid-gap: 1rem;\n        justify-content: center;\n        align-items: center;\n        margin-bottom: 2rem;\n        @media only screen and (max-width: ${variables.large}) {\n            grid-template-columns: 1fr;\n        }\n    }\n    .info {\n        color: ${variables.primaryLightGray};\n        font-size: 0.9rem;\n        text-align: left;\n        p {\n            margin: 0.1rem;\n        }\n    }\n    .links {\n        text-align: left;\n        margin: 0rem;\n        display: flex;\n        align-items: center;\n        .link {\n            width: 50px;\n            height: 50px;\n            font-size: 1.1rem;\n            border: solid 2px ${variables.primaryLightGray};\n            border-radius: 10px;\n            margin-right: 1rem;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            transition: 200ms ease-in;\n            a {\n                transition: 200ms ease-in;\n                color: ${variables.primaryLightGray};\n\n            }\n            &:hover {\n                box-shadow: 0px 0px 10px rgba(0,0,0,0.1);\n                border: solid 2px ${variables.primaryDark};\n                a {\n                    color: ${variables.primaryDark};\n                }\n            }\n        }\n    }\n`;\n\n\nexport default class hackathonLayout extends Component {\n    render() {\n        const { html, frontmatter: { title, dateFinished, github, website, date, tags, primaryTech, category, subtitle, timeAlloted, urlLink, heading  } } = this.props.data.markdownRemark;\n        const { location, pageContext: { next, prev } } = this.props;\n        return (\n            <Layout grid={true} location={location}>\n                <Container>\n                    <h1>{title}</h1>\n                    <p className=\"subtitle\">{subtitle}</p>\n                    <Author date={date} category={category} primaryTech={primaryTech} />\n                    <div className=\"aspect-ratio\">\n                    <a href={website} target=\"_blank\"><button>Visit Website</button></a>\n                        <iframe src={urlLink} width=\"100%\" height=\"500px\" data-url={urlLink}></iframe>\n                    </div>\n                    <h2>{heading}</h2>\n                    <div className=\"info\">\n                        <p>Length: {timeAlloted}</p>\n                        <p>Date: {dateFinished}</p>\n                    </div>\n                    <StyledHTML dangerouslySetInnerHTML={{\n                        __html: html\n                    }} />\n                    <div className=\"metaInfo\">\n                        <div className=\"links\">\n                        <ReactTooltip />\n                            <div data-tip=\"Visit Website\" className=\"link\" ><a href={website} target=\"_blank\"><FontAwesomeIcon icon={faGlobe}/></a></div>\n                            <div data-tip=\"View Source Code\" className=\"link\" ><a href={github} target=\"_blank\"><FontAwesomeIcon icon={faCode}/></a></div>\n                        </div>\n                        <div className=\"tags\">\n                            {tags.map(tag => (\n                                <Link key={tag} to={`/tags/${kebabCase(tag)}`} ><p>#{tag}{`  `}</p></Link>\n                            ))}\n                        </div>\n                    </div>\n                    <div className=\"navigation\">\n                        {prev ?\n                            <Link className=\"icon\" to={`/hackathon${prev.frontmatter.slug}`}>\n                            <ArrowBackIosIcon /> Prev\n                            </Link> : <div></div>}   \n                        {next ?\n                            <Link className=\"icon\" to={`/hackathon${next.frontmatter.slug}`}>\n                                Next <ArrowForwardIosIcon />\n                            </Link> : <div></div>}\n                    </div>\n                </Container>\n            </Layout>\n        )\n    }\n}\n\nexport const query = graphql`\n    query HackathonQuery($slug: String!) {\n        markdownRemark(frontmatter: {\n            slug: {\n                eq: $slug\n            }\n        }) {\n            html\n            frontmatter {\n                title\n                date(fromNow: true)\n                slug\n                tags\n                posttype\n                subtitle\n                category\n                primaryTech\n                github\n                website\n                urlLink\n                heading\n                dateFinished(formatString: \"MMMM DD, YYYY\")\n                timeAlloted\n                featuredImage {\n                    childImageSharp {\n                        fluid(quality: 100, maxWidth: 800) {\n                            ...GatsbyImageSharpFluid_tracedSVG\n                      }\n                   }\n                }\n            }\n        }\n    }\n`;"],"sourceRoot":""}