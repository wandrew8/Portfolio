{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/projectArchive.js","webpack:///./src/components/projectListing.js"],"names":["Projects","props","location","ArchiveList","styled","ul","Archive","edges","allMarkdownRemark","map","edge","node","excerpt","frontmatter","title","slug","featuredImage","subtitle","key","to","className","fluid","childImageSharp","GridContainer","div","variables","medium","Button","button","primaryLightGray","Post","article","Listing","query","render","category","primaryTech","date","image","console","log"],"mappings":"8FAAA,oEAaeA,UARE,SAACC,GAChB,OACE,kBAAC,IAAD,CAAQC,SAAUD,EAAMC,UACtB,kBAAC,IAAD,MACA,kBAAC,IAAD,S,yhWCHAC,E,UAAcC,EAAOC,GAAV,kFAAGD,CAAH,kfA2FFE,IA9BC,WACd,IACQC,EADE,OACaC,kBAAfD,MAER,OACE,oCACE,+BACI,4CACA,kBAACJ,EAAD,KACGI,EAAME,KAAI,SAACC,GAAU,IAAD,EACyDA,EAAKC,KAAvEC,EADS,EACTA,QADS,IACAC,YAAeC,EADf,EACeA,MAAOC,EADtB,EACsBA,KAAgBC,GADtC,EAC4BC,SAD5B,EACsCD,eACxD,OACI,kBAAC,OAAD,CAAME,IAAKH,EAAMI,GAAE,YAAcJ,GAC5B,4BACI,6BACA,yBAAKK,UAAU,aACb,uBAAGA,UAAU,SAASN,GACtB,kBAAC,IAAD,CAAKM,UAAU,QAAQC,MAAOL,EAAcM,gBAAgBD,SAE9D,2BAAIT,a,i/UChFnBW,EAAgBnB,IAAOoB,IAAV,gFAAGpB,CAAH,iKAKaqB,IAAUC,QAOpCC,EAASvB,IAAOwB,OAAV,yEAAGxB,CAAH,+OAMKqB,IAAUI,iBACrBJ,IAAUI,iBAONJ,IAAUI,kBAIdC,EAAO1B,IAAO2B,QAAV,uEAAG3B,CAAH,qjBA8FF4B,IA9BC,kBACd,kBAAC,cAAD,CACEC,MA5Be,aA6BfC,OAAQ,YAA4B,IAAzB1B,EAAwB,EAAxBA,kBACP,OACI,kBAACe,EAAD,KACGf,EAAkBD,MAAME,KAAI,SAAAC,GAAS,IAAD,EAC+CA,EAAKC,KAA7EE,YAAeE,EADU,EACVA,KAAMD,EADI,EACJA,MAAOqB,EADH,EACGA,SAAUC,EADb,EACaA,YAAaC,EAD1B,EAC0BA,KAAMpB,EADhC,EACgCA,SAC3DqB,EAAQ5B,EAAKC,KAAKE,YAAYG,cAAcM,gBAAgBD,MAElE,OADAkB,QAAQC,IAAIF,GAER,kBAACR,EAAD,CAAMZ,IAAKH,GACP,kBAAC,OAAD,CAAMI,GAAE,YAAcJ,GACpB,kBAAC,IAAD,CAAKK,UAAU,eAAeC,MAAOiB,IACrC,4BAAKxB,GACL,2BAAIG,GACJ,kBAACU,EAAD,KAASQ,GACT,+BAAQE,EAAR,MAAiBD,UAhB3C","file":"component---src-pages-projects-js-227add0e304566cce5d7.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport ProjectArchive from '../components/projectArchive'\nimport ProjectListing from '../components/projectListing'\n\nconst Projects = (props) => {\n  return(\n    <Layout location={props.location}>\n      <ProjectListing />\n      <ProjectArchive />\n    </Layout>\n  )}\n\nexport default Projects\n","import React from \"react\"\r\nimport { Link } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\nimport styled from 'styled-components'\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst ArchiveList = styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    text-align: left;\r\n    .container {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n    .title {\r\n      font-weight: 500;\r\n      font-size: 1.2rem;\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n    a {\r\n        font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\r\n        font-size: 0.8rem;\r\n        text-decoration: none;\r\n        color: #524567;\r\n\r\n    }\r\n    .image {\r\n      border-radius: 50%;\r\n      height: 50px;\r\n      width: 50px;\r\n      object-fit: cover;\r\n      margin: 0rem 2rem 0.2rem 0.2rem;\r\n    }\r\n    hr {\r\n      margin-bottom: 1rem;\r\n    }\r\n   \r\n`;\r\n\r\nconst POST_ARCHIVE_QUERY = graphql`\r\nquery ProjectArchive {\r\n  allMarkdownRemark(limit: 10, filter: {frontmatter: {posttype: {eq: \"project\"}}}, sort: {order: ASC, fields: frontmatter___order}) {\r\n    edges {\r\n      node {\r\n        frontmatter {\r\n          title\r\n          slug\r\n          tags\r\n          subtitle\r\n          featuredImage {\r\n            childImageSharp {\r\n              fluid(maxWidth: 75) {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n           }\r\n        }\r\n        }\r\n        excerpt(pruneLength: 100)\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nconst Archive = () => {\r\n  const data = useStaticQuery(POST_ARCHIVE_QUERY)\r\n  const { edges } = data.allMarkdownRemark;\r\n\r\n  return (\r\n    <>\r\n      <aside>\r\n          <h3>Top Projects</h3>\r\n          <ArchiveList>\r\n            {edges.map((edge) => {\r\n                const { excerpt, frontmatter: { title, slug, subtitle, featuredImage }} = edge.node;\r\n               return ( \r\n                   <Link key={slug} to={`/projects${slug}`}>\r\n                        <li>\r\n                            <hr/>\r\n                            <div className=\"container\">\r\n                              <p className=\"title\">{title}</p>\r\n                              <Img className=\"image\" fluid={featuredImage.childImageSharp.fluid} />\r\n                            </div>\r\n                            <p>{excerpt}</p>\r\n                        </li>\r\n                    </Link>\r\n               )\r\n            })}\r\n          </ArchiveList>\r\n      </aside>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Archive\r\n","import React from \"react\"\r\nimport { StaticQuery, Link, graphql } from \"gatsby\"\r\nimport { variables } from '../styles/variables'\r\nimport Img from 'gatsby-image'\r\nimport styled from 'styled-components'\r\n\r\nexport const GridContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, 300px);\r\n  grid-gap: 1rem;\r\n  justify-content: center;\r\n  @media only screen and (max-width: ${variables.medium}) {\r\n        h2 {\r\n          font-size: 1.2rem;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 0rem 0.5rem;\r\n    text-align: center;\r\n    border-radius: 2px;\r\n    display: block;\r\n    font-size: 0.7rem;\r\n    border: solid 1px ${variables.primaryLightGray};\r\n    color: ${variables.primaryLightGray};\r\n    transition: 300ms ease-in;\r\n    cursor: pointer;\r\n    width: auto-fit;\r\n    background: transparent;\r\n    margin: 0.5rem 0rem;\r\n    &:hover {\r\n        color: ${variables.primaryLightGray};\r\n    }\r\n`;\r\n\r\nexport const Post = styled.article`\r\n    box-shadow: 0px 3px 10px rgba(25, 17, 34, 0.05);\r\n    padding: 1rem;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    .projectImage {\r\n      width: 100%;\r\n      max-width: 400px;\r\n      height: 175px;\r\n      object-fit: cover;\r\n      max-height: 230px;\r\n      border-radius: 10px;\r\n      margin: 0 auto;\r\n\r\n    }\r\n    a {\r\n        color: black;\r\n        text-decoration: none;\r\n    }\r\n    p {\r\n        font-size: 0.8rem;\r\n        margin: 0.5rem 0rem;\r\n    }\r\n    h2 {\r\n        font-size: 1.5rem;\r\n        margin: 1.2rem 0rem 0.5rem 0rem;\r\n    }\r\n    small {\r\n        color: gray;\r\n    }\r\n    .read-more {\r\n        font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\r\n        font-size: 0.8rem;\r\n        text-decoration: underline;\r\n        color: #524567;\r\n    }\r\n`;\r\n\r\nconst LISTING_QUERY = graphql`\r\nquery ProjectPostListing {\r\nallMarkdownRemark(limit: 5, filter: {frontmatter: {posttype: {eq: \"project\"}}}, sort: {order: ASC, fields: frontmatter___order}) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            slug\r\n            subtitle\r\n            category\r\n            primaryTech\r\n            date(fromNow: true)\r\n            featuredImage {\r\n              childImageSharp {\r\n                fluid(maxWidth: 300) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n             }\r\n          }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Listing = () => (\r\n  <StaticQuery \r\n    query={LISTING_QUERY}\r\n    render={({ allMarkdownRemark }) => {\r\n        return (\r\n            <GridContainer>\r\n              {allMarkdownRemark.edges.map(edge => {\r\n                  const { frontmatter: { slug, title, category, primaryTech, date, subtitle } } = edge.node\r\n                  const image = edge.node.frontmatter.featuredImage.childImageSharp.fluid\r\n                  console.log(image)\r\n                  return (\r\n                      <Post key={slug}>\r\n                          <Link to={`/projects${slug}`}>\r\n                            <Img className=\"projectImage\" fluid={image} />\r\n                            <h2>{title}</h2>\r\n                            <p>{subtitle}</p>\r\n                            <Button>{category}</Button>\r\n                            <small>{date} | {primaryTech}</small>\r\n                          </Link>\r\n                      </Post>\r\n                  )\r\n              })}\r\n            </GridContainer>\r\n        )\r\n    }}\r\n\r\n  />\r\n\r\n)\r\n\r\nexport default Listing\r\n"],"sourceRoot":""}