{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./src/components/layout2.js"],"names":["Tags","location","title","query","TAG_QUERY","render","allMarkdownRemark","TagContainer","group","map","edge","i","key","tag","to","kebabCase","className","totalCount","nodes","image","fluid","frontmatter","featuredImage","childImageSharp","styled","div","variables","primaryLight","MainWrapper","main","large","StyledFooter","footer","primaryLightGray","Gradient","primaryBlue","primaryGreen","Layout","children","useState","width","setWidth","useEffect","updateWindowDimensions","window","innerWidth","addEventListener","removeEventListener","from","height","pathname","styles","style","overflow","Date","getFullYear","defaultProps"],"mappings":"8OAkDeA,UAzCF,SAAC,GAAD,EAAEC,SAAF,OACX,oCACE,kBAAC,IAAD,CAAKC,MAAM,SACP,kBAAC,IAAD,KACA,6BACI,oCACA,kBAAC,cAAD,CACIC,MAAOC,EACPC,OAAQ,YAA4B,IAAzBC,EAAwB,EAAxBA,kBACP,OACA,kBAACC,EAAD,KACKD,EAAkBE,MAAMC,KAAI,SAACC,EAAMC,GAChC,OACI,kBAAC,OAAD,CACEC,IAAKF,EAAKG,IACVC,GAAE,SAAWC,IAAUL,EAAKG,KAA1B,KACF,yBAAKG,UAAU,OACb,4BAAKN,EAAKG,KACV,+BAAKH,EAAKO,WAAV,IAAuBP,EAAKO,WAAa,EAAI,WAAa,UAA1D,KACA,yBAAKD,UAAU,kBACZN,EAAKQ,MAAMT,KAAI,SAAAU,GACd,OACE,kBAAC,IAAD,CAAKH,UAAU,QAAQI,MAAOD,EAAME,YAAYC,cAAcC,gBAAgBH,mBAhB5G,aAqCZ,IAAMhB,EAAS,aA0BTG,EAAeiB,IAAOC,IAAV,qEAAGD,CAAH,yoBAGLE,IAAUC,e,iutECvEjBC,G,UAAcJ,IAAOK,KAAV,2EAAGL,CAAH,wLAQsBE,IAAUI,QAM3CC,EAAeP,IAAOQ,OAAV,4EAAGR,CAAH,gCACPE,IAAUO,kBAIfC,EAAWV,IAAOC,IAAV,wEAAGD,CAAH,sEAGyBE,IAAUS,YAAgBT,IAAUU,cAGrEC,EAAS,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUrC,EAAe,EAAfA,SAAe,EACbsC,qBAApBC,EADiC,KAC1BC,EAD0B,KAWzC,OATAC,qBAAU,WACR,IAAMC,EAAyB,WAC7BF,EAASG,OAAOC,aAIlB,OAFAD,OAAOE,iBAAiB,SAAUH,GAE3B,WACLC,OAAOG,oBAAoB,SAAUJ,OAGvC,kBAAC,IAAD,KACGH,EAAQ,IAAM,kBAAC,IAAD,MAAa,kBAAC,IAAD,MACxB,kBAAC,SAAD,CACEQ,KAAM,CAAEC,OAA8B,MAAtBhD,EAASiD,SAAmB,IAAM,KAClDpC,GAAI,CAAEmC,OAA8B,MAAtBhD,EAASiD,SAAmB,IAAM,OAC/C,SAAAC,GAAM,OACL,yBAAKC,MAAK,eAAGC,SAAU,UAAaF,IAClC,kBAACjB,EAAD,UAIR,kBAACN,EAAD,KACKU,GAEL,kBAACP,EAAD,WACK,IAAIuB,MAAOC,cADhB,mBAWRlB,EAAOmB,aAAe,CACpBvD,SAAU,IAGGoC","file":"component---src-pages-tags-js-816fd0d2301ce9f947f0.js","sourcesContent":["import React from \"react\"\r\nimport Layout2 from \"../components/layout2\"\r\nimport kebabCase from \"lodash/kebabCase\"\r\nimport styled from 'styled-components'\r\nimport Img from 'gatsby-image'\r\nimport { variables } from '../styles/variables'\r\nimport { Link, StaticQuery, graphql } from 'gatsby'\r\nimport SEO from \"../components/seo\"\r\n\r\nconst Tags = ({location}) => (\r\n  <>\r\n    <SEO title=\"Tags\" />\r\n        <Layout2>\r\n        <div>\r\n            <h1>Tags</h1>\r\n            <StaticQuery \r\n                query={TAG_QUERY}\r\n                render={({ allMarkdownRemark }) => {\r\n                    return (\r\n                    <TagContainer>\r\n                        {allMarkdownRemark.group.map((edge, i) => {\r\n                            return (\r\n                                <Link \r\n                                  key={edge.tag} \r\n                                  to={`/tags/${kebabCase(edge.tag)}/`}>\r\n                                  <div className=\"tag\">\r\n                                    <h3>{edge.tag}</h3>\r\n                                    <p>({edge.totalCount} {edge.totalCount > 1 ? \"projects\" : \"project\"})</p>\r\n                                    <div className=\"imageContainer\">\r\n                                      {edge.nodes.map(image => {\r\n                                        return(\r\n                                          <Img className=\"image\" fluid={image.frontmatter.featuredImage.childImageSharp.fluid} />\r\n                                        )\r\n                                      })}\r\n                                    </div>\r\n                                  </div>\r\n                                </Link>\r\n                                \r\n                            )\r\n                        })}\r\n                    </TagContainer>\r\n                    )\r\n                }}\r\n\r\n            />\r\n        </div>\r\n      </Layout2>\r\n  </>\r\n)\r\n\r\nexport default Tags\r\n\r\nconst TAG_QUERY = graphql`\r\nquery AllTags {\r\n  allMarkdownRemark {\r\n    group(field: frontmatter___tags) {\r\n      tag: fieldValue\r\n      totalCount\r\n      nodes {\r\n        frontmatter {\r\n          title\r\n          featuredImage {\r\n            childImageSharp {\r\n              fluid(maxWidth: 50) {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n          }\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n`\r\n\r\nconst TagContainer = styled.div`\r\n  a {\r\n    text-decoration: none;\r\n    color: ${variables.primaryLight};\r\n\r\n  }\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, 300px);\r\n  grid-gap: 1rem;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .tag {\r\n    width: 300px;\r\n    height: auto;\r\n    border-radius: 10px;\r\n    padding: 1rem;\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 0px 3px 10px rgba(25, 17, 34, 0.15);\r\n    transition: 200ms linear;\r\n    .imageContainer {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n    .image {\r\n      width: 50px;\r\n      height: 50px;\r\n      min-width: 50px;\r\n      min-height: 50px;\r\n      border-radius: 5px;\r\n      margin: 0rem 0.25rem;\r\n\r\n    }\r\n    h3 {\r\n      font-size: 1.2rem;\r\n      margin: 0;\r\n      margin-bottom: 0.5rem;\r\n      padding: 0;\r\n    }\r\n    &:hover{\r\n      box-shadow: 0px 3px 20px rgba(25, 17, 34, 0.2);\r\n\r\n    }\r\n  }\r\n`;","import React, { useState, useEffect } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport HeaderDrawer from './HeaderDrawer'\r\nimport styled from 'styled-components'\r\nimport Header from \"./header\"\r\nimport App from './app'\r\nimport { variables } from '../styles/variables'\r\nimport \"./layout.css\"\r\n\r\nconst MainWrapper = styled.main`\r\n  width: 100%;\r\n  margin: 0rem auto;\r\n  margin-bottom: 3rem;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 1rem;\r\n  padding: 0rem;\r\n  @media only screen and (max-width: ${variables.large}) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n\r\n`;\r\n\r\nconst StyledFooter = styled.footer`\r\n  color: ${variables.primaryLightGray};\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst Gradient = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(90deg, ${variables.primaryBlue}, ${variables.primaryGreen});\r\n`;\r\n\r\nconst Layout = ({ children, location }) => {\r\n  const [ width, setWidth ] = useState();\r\n  useEffect(() => {\r\n    const updateWindowDimensions = () => {\r\n      setWidth(window.innerWidth);\r\n    }\r\n    window.addEventListener(\"resize\", updateWindowDimensions);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", updateWindowDimensions);    };\r\n  });\r\n  return (\r\n    <App>\r\n      {width > 756 ? <Header /> : <HeaderDrawer />}\r\n          <Spring \r\n            from={{ height: location.pathname === '/' ? 100 : 150 }} \r\n            to={{ height: location.pathname === '/' ? 150 : 100 }}>\r\n            {styles => (\r\n              <div style={{overflow: 'hidden', ...styles}}>\r\n                <Gradient/>\r\n              </div>\r\n            )}\r\n          </Spring>\r\n        <MainWrapper>\r\n            {children}\r\n        </MainWrapper>\r\n        <StyledFooter>\r\n          Â© {new Date().getFullYear()} Andrew Weiss\r\n        </StyledFooter>\r\n    </App>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nLayout.defaultProps = {\r\n  location: {},\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}